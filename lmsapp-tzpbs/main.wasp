app lmsapp {
  wasp: {
    version: "^0.11.1"
  },
  title: "lmsapp",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    videos   Video[]
psl=}

entity Video {=psl
    id          Int    @id @default(autoincrement())
    title       String
    description String
    url         String
    user        User   @relation(fields: [userId], references: [id])
    userId      Int
psl=}

action createVideo {
  fn: import { createVideo } from "@server/actions.js",
  entities: [Video]
}

action deleteVideo {
  fn: import { deleteVideo } from "@server/actions.js",
  entities: [Video]
}

query getVideo {
  fn: import { getVideo } from "@server/queries.js",
  entities: [Video]
}

query getUserVideos {
  fn: import { getUserVideos } from "@server/queries.js",
  entities: [Video]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: true
}

route VideoRoute { path: "/video/:videoId", to: VideoPage }
page VideoPage {
  component: import { VideoPage } from "@client/pages/Video.jsx",
  authRequired: true
}

route NewVideoRoute { path: "/new-video", to: NewVideoPage }
page NewVideoPage {
  component: import { NewVideo } from "@client/pages/NewVideo.jsx",
  authRequired: true
}